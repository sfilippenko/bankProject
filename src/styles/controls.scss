$inputHeight: 36px;
$fs: 12px;
$disabled: #eee;
$borderColor: #ccc;

@mixin ph() {
  color: rgba(0,0,0,0.5) !important;
  font-size: $fs !important;
}

@mixin focus() {
  outline: none;
  border-color: #007eff;
  box-shadow: none;
}

@mixin inputStyles() {
  box-sizing: border-box;
  border: 1px solid $borderColor;
  border-radius: 4px;
  padding: 0 10px;
  width: 100%;
  font-size: $fs;
  height: $inputHeight;
  line-height: $inputHeight;
  white-space: nowrap;
}

input, textarea {
  &::placeholder {
    @include ph();
  }
  &::-ms-clear {
    display: none;
  }
}

input[disabled] {
  background: $disabled;
  cursor: not-allowed !important;
}

.simpleGrid {
  display: flex;
  flex-wrap: wrap;
  > * {
    flex: 1 1;
  }
  &.col-2 > * {
    min-width: 50%
  }
  &.col-3 > * {
    min-width: 33.33%;
  }
  &.col-4 > * {
    min-width: 25%;
  }
}

.control-block {
  display: flex;
  align-items: center;
  padding: 5px 0;
  margin-bottom: 5px;
  &__label {
    max-width: 60%;
  }
  &__value {
    flex: 1 1;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    padding-left: 10px;
  }
  &--labelTop {
    display: block;
    .control-block__label {
      max-width: none;
    }
    .control-block__value {
      padding-left: 0;
    }
  }
}


//SelectWrapper
.Select-placeholder {
  font-size: $fs;
  @include ph();
}

.Select-menu-outer {
  z-index: 10 !important;
  font-size: $fs;
}

.Select-value {
  font-size: $fs;
  padding-right: 35px !important;
  color: black !important;
}

.Select-control {
  box-shadow: none !important;
}

.Select.is-disabled > .Select-control {
  background: $disabled;
  cursor: not-allowed;
}

.Select-option {
  color: black !important;
}


//DatePickerWrapper
.date-picker-popover {
  z-index: 10 !important;
}

.form-control {
  font-size: $fs !important;
  height: $inputHeight !important;
  line-height: $inputHeight !important;
  padding: 0 10px !important;
  &[disabled] {
    background: $disabled !important;
  }
  &:focus {
    @include focus();
  }
}


//TextWrapper
.text-control {
  @include inputStyles();
  &--textarea {
    resize: none;
    line-height: 0.5*$inputHeight;
    white-space: normal;
  }
  &:focus {
    @include focus();
  }
}


//file
.file-box {
  @include inputStyles();
  position: relative;
  &:hover {
    cursor: default;
  }
  &--disabled {
    background: $disabled;
    &:hover {
      cursor: not-allowed;
    }
  }
  &--rejected {
    background: rgba(255, 0, 0, 0.2);
  }
  &--accepted {
    background: rgba(0, 255, 0, 0.2);
  }
}


//autocomplete
.react-autosuggest {

  &__suggestions-container {
    position: absolute;
    background: white;
  }

  &__suggestions-list {
    list-style: none;
    font-size: $fs;
    padding: 0;
    margin: 0;
    border-bottom-left-radius: 4px;
    border-bottom-right-radius: 4px;
    border: 1px solid $borderColor;
    border-top: none;
    box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06);
    max-height: 200px;
    overflow: auto;
  }

  &__suggestion {
    padding: 8px 10px;

    &:hover {
      cursor: pointer;
    }

    &--highlighted {
      background: rgba(0, 126, 255, 0.08);
    }
  }
}


div.text-control {
  line-height: ($inputHeight - 2px);
  &--readonly {
    background: $disabled;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    cursor: not-allowed;
  }
  &--textarea {
    margin-bottom: 0;
    line-height: 0.5*$inputHeight;
    white-space: normal;
    overflow-y: auto;
    text-overflow: clip;
  }
}

